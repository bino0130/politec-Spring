6/15 강의 되짚기

정적 웹 페이지 구동
: 웹 브라우저에서 웹 서버에 요청 -> 웹 서버에서 저장소 조회 -> 웹 서버에서 웹 브라우저에게 응답


동적 웹 페이지 구동
: 웹 브라우저에서 웹 서버에 요청 -> 웹 서버에서 전처리 후 저장소/DB 조회 -> 후처리 후 웹 서버에서 웹 브라우저에게 응답

애플릿 : 사용자가 서버에 요청하면 서버는 사용자에게 전체 내용을 통째로 보내줌
	한꺼번에 많은 양의 데이터가 오고갈 수 있을 수 밖에 없고, 변경사항이 있으면 수정해서 다시 재배포해야했고,
	서버에 많은 사람이 몰리면 부하가 컸다.

서블릿 : 클라이언트에게 서버가 요청을 받으면 서블렛에서 전처리한 뒤 부분적인 내용만 클라이언트에게 보내줌
Java 파일을 컴파일 -> 클래스 파일로 변환시킴 Ex) Apache, tomcat

서블릿 컨테이너 안에 있는 서블릿이 jsp파일을 java 파일로 변환시키고, java 파일을 .class 파일로 컴파일한다


<%@	%> : 지시어

<%!	%> : 스크립트 요소 (느낌표 들어가면 선언부)

<%=	%> : 스크립트 요소 (표현식)

<%	%> : 스크립트 요소 (스크립틀릿)

include : A라는 페이지가 B라는 페이지를 포함시켰다 -> 2개의 페이지가 하나가 되었다라고 생각하기	

pageContext, session, request, Application

Get : url의 뒤에 쿼리스트링을 붙인다.
Post : body 영역의 데이터를 input한 뒤 숨겨서 전송한다.

Response : sendRedirect (화면의 페이지를 다른 형식으로 출력), response를 활용하면 addHeader( ), setHeader( ), getHeader( )등을 이용해 헤더값을 추가, 수정할 수 있다.
	요청의 응답 -> web 내보낼때, 페이지 이동할때 사용

radiobox : 여러 개의 선택지 중 1개만 선택 가능함
checkbox : 여러 개의 선택지 중 다중 선택 가능
jsessionID : 쿠키 주소값?


getHeader( ) : 여러 개의 헤더값이 있더라도 첫번 째 헤더값만 가져온다.

application 객체
application 객체의 lifecycle : 웹이 시작해서 종료될때까지 작동한다.

Error 400번대 : 클라이언트 오류
Error 500번대 : 서버 오류

내장객체 4개영역
pageContext -> request -> session -> application

자신보다 큰 영역에는 접근 가능, 자신보다 작은 영역에는 접근 가능
page : 동일한 page 영역 내에서 공유가능
request : 요청 A페이지 -> B페이지 공유가능

session에는 최소한의 값만 저장해놓기. 그러지 않으면 서버에 부하가 걸림
세션은 서버터지는 주요 요인

클라이언트가 갖고있는 특수한 고유 데이터(ex: key, value값)를 application에 저장하는 건 적절하지 않다.

xxx.setAttribute( ) : 속성 저장
xxx.getAttribute( ) : 속성값 출력

AUto Unboxing : 자바의 기본 속성. 비교하는 두 개의 값이 같다면 형이 달라도 자동으로 언박싱해버림?
